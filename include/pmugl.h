/***************************************************************************/
/*                                                                         */
/*  pmugl.h                                                                */
/*                                                                         */
/*  This file defines the mapping from the IBM extended Universal Glyph    */
/*  List, which is the native character encoding for OS/2 fonts, to        */
/*  Unicode UCS codepoint.                                                 */
/*                                                                         */
/*  Derived from the FreeType/2 project sources by Michal Necasek (which   */
/*  was in turn based upon information provided by IBM).                   */
/*                                                                         */
/*       Copyright (C) 2012       Alex Taylor (alex @ altsan . org)        */
/*       Copyright (C) 1997--2000 Michal Necasek <mike@mendelu.cz>         */
/*       Copyright (C) 1997, 1999 International Business Machines          */
/*                                                                         */
/*  This header file is licensed under the FreeType license; see FTL.TXT.  */
/*                                                                         */
/***************************************************************************/

#ifndef __PMUGL_H__
#define __PMUGL_H__


#define CHAR_IS_LATIN1( c )     ((( c < 32 ) || \
                                 (( c >= 127 ) && ( c <= 255 )))? 1 : 0 )
#define CHAR_IS_PCEXTRA( c )    ((( c >= 256 ) && ( c <= 331 )) ? 1 : 0 )
#define CHAR_IS_CYRILLIC( c )   ((( c >= 384 ) && ( c <= 478 )) ? 1 : 0 )
#define CHAR_IS_LATINEXT( c )   (((( c >= 332 ) && ( c <= 383 )) || \
                                  (( c >= 479 ) && ( c <= 504 )))? 1: 0 )
#define CHAR_IS_HEBREW( c )     ((( c >= 535 ) && ( c <= 584 )) ? 1 : 0 )
#define CHAR_IS_GREEK( c )      ((( c >= 585 ) && ( c <= 646 )) ? 1 : 0 )
#define CHAR_IS_ARABIC( c )     ((( c >= 647 ) && ( c <= 747 )) ? 1 : 0 )
#define CHAR_IS_UGLEXT( c )     (((( c >= 505 ) && ( c <= 511 )) || \
                                  (( c >= 748 ) && ( c <= 767 )))? 1: 0 )
#define CHAR_IS_KANA( c )       ((( c >= 768 ) && ( c <= 891 )) ? 1 : 0 )
#define CHAR_IS_HANGUL( c )     ((( c >= 896 ) && ( c <= 949 )) ? 1 : 0 )
#define CHAR_IS_THAI( c )       ((( c >= 950 ) && ( c <= 1036)) ? 1 : 0 )


#define OS2UGL_MAX_GLYPH        1036

static const USHORT UGL2Uni[] = {

  /* Note: codepoints 0 to 255 correspond to IBM codepage 850/858 */

  /* 0..9 */
  0x0000, 0x263a, 0x263b, 0x2665, 0x2666, 0x2663, 0x2660, 0x2022, 0x25d8, 0x25cb,
  /* 10..19 */
  0x25d9, 0x2642, 0x2640, 0x266a, 0x266b, 0x263c, 0x25ba, 0x25c4, 0x2195, 0x203c,
  /* 20..29 */
  0x00b6, 0x00a7, 0x25ac, 0x21a8, 0x2191, 0x2193, 0x2192, 0x2190, 0x221f, 0x2194,
  /* 30..39 */
  0x25b2, 0x25bc, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
  /* 40..49 */
  0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31,
  /* 50..59 */
  0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b,
  /* 60..69 */
  0x3c, 0x3d, 0x3e, 0x3f, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45,
  /* 70..79 */
  0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
  /* 80..89 */
  0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59,
  /* 90..99 */
  0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63,
  /* 100..109 */
  0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d,
  /* 110..119 */
  0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,
  /* 120..129 */
  0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x2302, 0xc7, 0xfc,
  /* 130..139 */
  0xe9, 0xe2, 0xe4, 0xe0, 0xe5, 0xe7, 0xea, 0xeb, 0xe8, 0xef,
  /* 140..149 */
  0xee, 0xec, 0xc4, 0xc5, 0xc9, 0xe6, 0xc6, 0xf4, 0xf6, 0xf2,
  /* 150..159 */
  0xfb, 0xf9, 0xff, 0xd6, 0xdc, 0xf8, 0xa3, 0xd8, 0xd7, 0x192,
  /* 160..169 */
  0xe1, 0xed, 0xf3, 0xfa, 0xf1, 0xd1, 0xaa, 0xba, 0xbf, 0xae,
  /* 170..179 */
  0xac, 0xbd, 0xbc, 0xa1, 0xab, 0xbb, 0x2591, 0x2592, 0x2593, 0x2502,
  /* 180..189 */
  0x2524, 0xc1, 0xc2, 0xc0, 0xa9, 0x2563, 0x2551, 0x2557, 0x255d, 0xa2,
  /* 190..199 */
  0xa5, 0x2510, 0x2514, 0x2534, 0x252c, 0x251c, 0x2500, 0x253c, 0xe3, 0xc3,
  /* 200..209 */
  0x255a, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256c, 0xa4, 0xf0, 0xd0,
  /* 210..219 */
  0xca, 0xcb, 0xc8, 0x131, 0xcd, 0xce, 0xcf, 0x2518, 0x250c, 0x2588,
  /* 220..229 */
  0x2584, 0xa6, 0xcc, 0x2580, 0xd3, 0xdf, 0xd4, 0xd2, 0xf5, 0xd5,
  /* 230..239 */
  0xb5, 0xfe, 0xde, 0xda, 0xdb, 0xd9, 0xfd, 0xdd, 0xaf, 0xb4,
  /* 240..249 */
  0xad, 0xb1, 0x2017, 0xbe, 0xb6, 0xa7, 0xf7, 0xb8, 0xb0, 0xa8,
  /* 250..255 */
  0xb7, 0xb9, 0xb3, 0xb2, 0x25a0, 0xa0,

  /* Extra characters for codepages 437 and 1004 */

  /* 256..259 */
  0x20a7, 0x2310, 0x2561, 0x2562,
  /* 260..269 */
  0x2556, 0x2555, 0x255c, 0x255b, 0x255e, 0x255f, 0x2567, 0x2568, 0x2564, 0x2565,
  /* 270..279 */
  0x2559, 0x2558, 0x2552, 0x2553, 0x256b, 0x256a, 0x258c, 0x2590, 0x3b1, 0x393,
  /* 280..289 */
  0x3c0, 0x3a3, 0x3c3, 0x3c4, 0x3a6, 0x398, 0x3a9, 0x3b4, 0x221e, 0x3c6,
  /* 290..299 */
  0x3b5, 0x2229, 0x2261, 0x2265, 0x2264, 0x2320, 0x2321, 0x2248, 0x2219, 0x221a,
  /* 300..309 */
  0x207f, 0x2c9, 0x2d8, 0x2d9, 0x2da, 0x2dd, 0x2db, 0x2c7, 0x2018, 0x2019,
  /* 310..318 */
  0x201c, 0x201d, 0x2013, 0x2014, 0x2c6, 0x2dc, 0x201a, 0x201e, 0x2026,
  /* 319..329 */
  0x2020, 0x2021, 0x2c6, 0x2030, 0x160, 0x2039, 0x152, 0x303, 0x2122, 0x161, 0x203a,
  /* 330..331 */
  0x153, 0x178,

  /* OS/2 v2.x ended at this point. */

  /* 330..339 */
  0x11f, 0x11e, 0x130, 0x15f, 0x15e, 0x103, 0x102, 0x105,
  /* 340..349 */
  0x104, 0x107, 0x106, 0x10d, 0x10c, 0x10f, 0x10e, 0x111, 0x11b, 0x11a,
  /* 350..359 */
  0x119, 0x118, 0x13a, 0x139, 0x13e, 0x13d, 0x142, 0x141, 0x144, 0x143,
  /* 360..369 */
  0x148, 0x147, 0x151, 0x150, 0x155, 0x154, 0x159, 0x158, 0x15b, 0x15a,
  /* 370..379 */
  0x165, 0x164, 0x163, 0x162, 0x171, 0x170, 0x16f, 0x16e, 0x17a, 0x179,
  /* 380..383 */
  0x17e, 0x17d, 0x17c, 0x17b,

  /* OS/2 Warp 3 ended at this point. */

  /* 384..389 */
  0x401, 0x402, 0x403, 0x404, 0x405, 0x406,
  /* 390..399 */
  0x407, 0x408, 0x409, 0x40a, 0x40b, 0x40c, 0x40e, 0x40f, 0x410, 0x411,
  /* 400..409 */
  0x412, 0x413, 0x414, 0x415, 0x416, 0x417, 0x418, 0x419, 0x41a, 0x41b,
  /* 410..419 */
  0x41c, 0x41d, 0x41e, 0x41f, 0x420, 0x421, 0x422, 0x423, 0x424, 0x425,
  /* 420..429 */
  0x426, 0x427, 0x428, 0x429, 0x42a, 0x42b, 0x42c, 0x42d, 0x42e, 0x42f,
  /* 430..439 */
  0x430, 0x431, 0x432, 0x433, 0x434, 0x435, 0x436, 0x437, 0x438, 0x439,
  /* 440..449 */
  0x43a, 0x43b, 0x43c, 0x43d, 0x43e, 0x43f, 0x440, 0x441, 0x442, 0x443,
  /* 450..459 */
  0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44a, 0x44b, 0x44c, 0x44d,
  /* 460..469 */
  0x44e, 0x44f, 0x2116, 0x451, 0x452, 0x453, 0x454, 0x455, 0x456, 0x457,
  /* 470..479 */
  0x458, 0x459, 0x45a, 0x45b, 0x45c, 0x45e, 0x45f, 0x490, 0x491, 0x156,
  /* 480..489 */
  0x12e, 0x100, 0x112, 0x116, 0x122, 0x136, 0x12a, 0x1eb, 0x145, 0x14c,
  /* 490..499 */
  0x172, 0x16a, 0x157, 0x12f, 0x101, 0x113, 0x117, 0x123, 0x137, 0x12b,
  /* 500..504 */
  0x13c, 0x146, 0x14d, 0x173, 0x16b,

  /* OS/2 Warp 4 support ended here.
   * Starting with Aurora, all previously-separate languages were unified
   * into the extended glyphlist from this point.
   */

  /* 505..509 */
  0xfffd, 0x2260, 0x25ca, 0x2318, 0x2113,
  /* 510..519 */
  0x2044, 0x2202, 0x0300, 0x0301, 0x0302, 0x0308, 0x0303, 0x0327, 0x030c, 0x030b,
  /* 520..529 */
  0x030a, 0x0306, 0x0328, 0x0307, 0x0000, 0x0000, 0x0000, 0x0000, 0x0344, 0x0304,
  /* 530..539 */
  0x0000, 0x200c, 0x200d, 0x200e, 0x200f, 0x20aa, 0x05d0, 0x05d1, 0x05d2, 0x05d3,
  /* 540..549 */
  0x05d4, 0x05d5, 0x05d6, 0x05d7, 0x05d8, 0x05d9, 0x05da, 0x05db, 0x05dc, 0x05dd,
  /* 550..559 */
  0x05de, 0x05df, 0x05e0, 0x05e1, 0x05e2, 0x05e3, 0x05e4, 0x05e5, 0x05e6, 0x05e7,
  /* 560..569 */
  0x05e8, 0x05e9, 0x05ea, 0x05b0, 0x05b1, 0x05b2, 0x05b3, 0x05b4, 0x05b5, 0x05b6,
  /* 570..579 */
  0x05b7, 0x05b8, 0x05b9, 0x05bb, 0x05bc, 0x05bd, 0x05be, 0x05bf, 0x05c0, 0x05c1,
  /* 580..589 */
  0x05c2, 0x05c3, 0x05f0, 0x05f1, 0x05f2, 0x2015, 0x0384, 0x0385, 0x0391, 0x0392,
  /* 590..599 */
  0x0394, 0x0395, 0x0396, 0x0397, 0x03d1, 0x0399, 0x039a, 0x039b, 0x039c, 0x039d,
  /* 600..609 */
  0x039e, 0x039f, 0x03a0, 0x03a1, 0x03a4, 0x03a5, 0x03a6, 0x03a7, 0x03b2, 0x03b3,
  /* 610..619 */
  0x03b6, 0x03b7, 0x03b8, 0x03b9, 0x03ba, 0x03bb, 0x03bc, 0x03bd, 0x03be, 0x03bf,
  /* 620..629 */
  0x03c1, 0x03c2, 0x03c4, 0x03c6, 0x03c7, 0x03c8, 0x03c9, 0x0386, 0x0388, 0x0389,
  /* 630..639 */
  0x038a, 0x038c, 0x038e, 0x038f, 0x03aa, 0x03ab, 0x03ac, 0x03ad, 0x03ae, 0x03af,
  /* 640..649 */
  0x03cc, 0x03cd, 0x03ce, 0x03ca, 0x03cb, 0x0390, 0x03b0, 0xfef7, 0xfef8, 0xfefb,
  /* 650..659 */
  0xfefc, 0xf8fc, 0xfe82, 0xfe84, 0xfe8e, 0x0628, 0x062a, 0x062b, 0x060c, 0x062c,
  /* 660..669 */
  0x062d, 0x062e, 0x0660, 0x0661, 0x0662, 0x0663, 0x0664, 0x0665, 0x0666, 0x0667,
  /* 670..679 */
  0x0668, 0x0669, 0x0641, 0x061b, 0xf8f6, 0xf8f5, 0xf8f4, 0x061f, 0x0621, 0x0622,
  /* 680..689 */
  0x0623, 0x0624, 0xfeca, 0x0626, 0x0627, 0xfe91, 0x0629, 0xfe97, 0xfe9b, 0xfe9f,
  /* 690..699 */
  0xfea3, 0xfea7, 0x062f, 0x0630, 0x0631, 0x0632, 0xfeb3, 0xfeb7, 0xfebb, 0xfec0,
  /* 700..709 */
  0x0637, 0x0638, 0xfecb, 0xfecf, 0x0639, 0x0640, 0xfed3, 0xfed7, 0xfed8, 0xfedf,
  /* 710..719 */
  0xfee3, 0xfee7, 0xfeeb, 0x0648, 0x0649, 0xfef3, 0xf8f7, 0xfecc, 0xfece, 0x063a,
  /* 720..729 */
  0x0645, 0xfe7d, 0x0651, 0x0646, 0x0647, 0xfeec, 0xfef0, 0xfef2, 0xfed0, 0x0642,
  /* 730..739 */
  0xfef5, 0xfef6, 0x0644, 0x0643, 0x064a, 0x0686, 0x06af, 0x067e, 0x0698, 0x0625,
  /* 740..749 */
  0x064b, 0x064c, 0x064d, 0x064e, 0x064f, 0x0650, 0x0652, 0x0698, 0x202a, 0x202b,
  /* 750..759 */
  0x202c, 0x202d, 0x202e, 0x25c5, 0x2007, 0xf8ff, 0xfb00, 0xfb01, 0xfb02, 0xfb03,
  /* 760..769 */
  0xfb04, 0x0133, 0x222b, 0x215b, 0x215c, 0x215d, 0x215e, 0xf8b3, 0x303f, 0x21b5,


  /* The official UGL assigns codepoints 770-832 to the fullwidth katakana set,
   * and when using Unicode TrueType fonts under OS/2 they will be mapped as
   * such.  However, in all OS/2 bitmap fonts, as well as non-Unicode TrueType
   * and Type 1 fonts, the actual characters returned by these codepoints are
   * HALF-width katakana (U+FF61-FF9F) -- full-width kana (along with kanji and
   * other CJK characters) are loaded from separate fonts according to the
   * system's DBCS association settings (if any).
   *
   * Codepoints 833-891 are even more peculiar, as UGL assigns them to hiragana
   * and a handful of additional CJK characters.  However, OS/2 never uses them
   * -- the characters don't exist under any single-byte codepage, and when a
   * UGL bitmap font is active under a DBCS/MBCS codepage OS/2 will always look
   * for those characters in the separate associated DBCS fonts.  Presumably,
   * IBM assigned these codepoints as part of some vague idea for future support
   * which was later abandoned.  (No extant bitmap font from IBM actually uses
   * them.)
   *
   * In light of the above, I have modified the Unicode-to-UGL mappings to treat
   * 770-832 as halfwidth kana and to report 833-891 as unsupported.  If desired
   * the following #ifdef can be toggled in order to cause hiragana and
   * (fullwidth) katakana to be loaded from the font at these codepoints,
   * although this is probably not useful.  (The conversion code in gpifont.c
   * will always map halfwidth Unicode characters to this range regardless of
   * what's in the table here.)
   */

#if 1

  /* 770..779 */
  0xff61, 0xff62, 0xff63, 0xff64, 0xff65, 0xff66, 0xff67, 0xff68, 0xff69, 0xff6a,
  /* 780..789 */
  0xff6b, 0xff6c, 0xff6d, 0xff6e, 0xff6f, 0xff70, 0xff71, 0xff72, 0xff73, 0xff74,
  /* 790..799 */
  0xff75, 0xff76, 0xff77, 0xff78, 0xff79, 0xff7a, 0xff7b, 0xff7c, 0xff7d, 0xff7e,
  /* 800..809 */
  0xff7f, 0xff80, 0xff81, 0xff82, 0xff83, 0xff84, 0xff85, 0xff86, 0xff87, 0xff88,
  /* 810..819 */
  0xff89, 0xff8a, 0xff8b, 0xff8c, 0xff8d, 0xff8e, 0xff8f, 0xff90, 0xff91, 0xff92,
  /* 820..829 */
  0xff93, 0xff94, 0xff95, 0xff96, 0xff97, 0xff98, 0xff99, 0xff9a, 0xff9b, 0xff9c,
  /* 830..839 */
  0xff9d, 0xff9e, 0xff9f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  /* 840..849 */
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  /* 850..859 */
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  /* 860..869 */
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  /* 870..879 */
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  /* 880..889 */
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  /* 890..895 */
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,

#else

  /* 770..779 */
  0x3002, 0x300c, 0x300d, 0x3001, 0x30fb, 0x30f2, 0x30a1, 0x30a3, 0x30a5, 0x30a7,
  /* 780..789 */
  0x30a9, 0x30e3, 0x30e5, 0x30e7, 0x30c3, 0x30fc, 0x30a2, 0x30a4, 0x30a6, 0x30a8,
  /* 790..799 */
  0x30aa, 0x30ab, 0x30ad, 0x30af, 0x30b1, 0x30b3, 0x30b5, 0x30b7, 0x30b9, 0x30bb,
  /* 800..809 */
  0x30bd, 0x30bf, 0x30c1, 0x30c4, 0x30c6, 0x30c8, 0x30ca, 0x30cb, 0x30cc, 0x30cd,
  /* 810..819 */
  0x30ce, 0x30cf, 0x30d2, 0x30d5, 0x30d8, 0x30db, 0x30de, 0x30df, 0x30e0, 0x30e1,
  /* 820..829 */
  0x30e2, 0x30e4, 0x30e6, 0x30e8, 0x30e9, 0x30ea, 0x30eb, 0x30ec, 0x30ed, 0x30ef,
  /* 830..839 */
  0x30f3, 0x309b, 0x309c, 0x3041, 0x3043, 0x3045, 0x3047, 0x3049, 0x3083, 0x3085,
  /* 840..849 */
  0x3049, 0x3063, 0x3042, 0x3044, 0x3046, 0x3048, 0x304a, 0x304b, 0x304d, 0x304f,
  /* 850..859 */
  0x3051, 0x3053, 0x3055, 0x3057, 0x3059, 0x305b, 0x305d, 0x305f, 0x3061, 0x3064,
  /* 860..869 */
  0x3066, 0x3068, 0x306a, 0x306b, 0x306c, 0x306d, 0x306e, 0x306f, 0x3072, 0x3075,
  /* 870..879 */
  0x3078, 0x307b, 0x307e, 0x307f, 0x3080, 0x3081, 0x3082, 0x3084, 0x3086, 0x3088,
  /* 880..889 */
  0x3089, 0x308a, 0x308b, 0x308c, 0x308d, 0x308f, 0x3092, 0x3093, 0x300e, 0x300f,
  /* 890..895 */
  0x30f6, 0x3005, 0x0000, 0x0000, 0x0000, 0x0000,

#endif  /* 1 */

  /* 896..899 */
  0x3131, 0x3132, 0x3133, 0x3134,
  /* 900..909 */
  0x3135, 0x3136, 0x3137, 0x3138, 0x3139, 0x313a, 0x313b, 0x313c, 0x313d, 0x313e,
  /* 910..919 */
  0x313f, 0x3140, 0x3141, 0x3142, 0x3143, 0x3144, 0x3145, 0x3146, 0x3147, 0x3148,
  /* 920..929 */
  0x3149, 0x314a, 0x314b, 0x314c, 0x314d, 0x314e, 0x314f, 0x3150, 0x3151, 0x3152,
  /* 930..939 */
  0x3153, 0x3154, 0x3155, 0x3156, 0x3157, 0x3158, 0x3159, 0x315a, 0x315b, 0x315c,
  /* 940..949 */
  0x315d, 0x315e, 0x315f, 0x3160, 0x3161, 0x3162, 0x3163, 0x20a9, 0x0000, 0x3164,
  /* 950..959 */
  0x0e3f, 0x0e01, 0x0e02, 0x0e03, 0x0e04, 0x0e05, 0x0e06, 0x0e07, 0x0e08, 0x0e09,
  /* 960..969 */
  0x0e0a, 0x0e0b, 0x0e0c, 0x0e0d, 0x0e0e, 0x0e0f, 0x0e10, 0x0e11, 0x0e12, 0x0e13,
  /* 970..979 */
  0x0e14, 0x0e15, 0x0e16, 0x0e17, 0x0e18, 0x0e19, 0x0e1a, 0x0e1b, 0x0e1c, 0x0e1d,
  /* 980..989 */
  0x0e1e, 0x0e1f, 0x0e20, 0x0e21, 0x0e22, 0x0e23, 0x0e24, 0x0e25, 0x0e26, 0x0e27,
  /* 990..999 */
  0x0e28, 0x0e29, 0x0e2a, 0x0e2b, 0x0e2c, 0x0e2d, 0x0e2e, 0x0e2f, 0x0e30, 0x0e31,
  /* 1000..1009 */
  0x0e32, 0x0e33, 0x0e34, 0x0e35, 0x0e36, 0x0e37, 0x0e38, 0x0e39, 0x0e3a, 0x0e40,
  /* 1010..1019 */
  0x0e41, 0x0e42, 0x0e43, 0x0e44, 0x0e45, 0x0e46, 0x0e47, 0x0e48, 0x0e49, 0x0e4a,
  /* 1020..1029 */
  0x0e4b, 0x0e4c, 0x0e4d, 0x0e4e, 0x0e4f, 0x0e5a, 0x0e5b, 0x0e50, 0x0e51, 0x0e52,
  /* 1030..1036 */
  0x0e53, 0x0e54, 0x0e55, 0x0e56, 0x0e57, 0x0e58, 0x0e59

  /* Note: UGL codepoints above 1036 do not correspond to Unicode characters. */

};


#endif  /* #ifndef __PMUGL_H__ */
